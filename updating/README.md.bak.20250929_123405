# BAX-IDE Update Scripts

This directory contains scripts to automatically update BAX-IDE to the latest VSCode version while preserving all BAX branding and customizations.

## Quick Start

### Linux/macOS/Git Bash
```bash
# Update to latest stable VSCode
bash updating/update_bax_to_latest_vscode.sh

# Update to latest insider VSCode and automatically build
bash updating/update_bax_to_latest_vscode.sh --insider --build
```

### Windows PowerShell
```powershell
# Update to latest stable VSCode
.\updating\update_bax_to_latest_vscode.ps1

# Update to latest insider VSCode and automatically build
.\updating\update_bax_to_latest_vscode.ps1 -Insider -Build
```

## What These Scripts Do

1. **ðŸ“¡ Fetch Latest VSCode Version** - Queries Microsoft's update API to get the latest VSCode commit and version
2. **ðŸ”„ Update BAX Patches** - Downloads latest BAX patches, telemetry removal, and customizations
3. **ðŸ“¥ Download Source Code** - Downloads the latest VSCode source from GitHub
4. **ðŸŽ¨ Apply BAX Branding** - Runs all branding scripts to replace BAX with BAX branding
5. **ðŸ”§ Apply Patches** - Applies all patches for telemetry removal and customizations
6. **ðŸ§¹ Clean Build Outputs** - Removes old build directories to ensure fresh compilation
7. **ðŸ”¨ Optional Auto-Build** - Can automatically start the build process

## Script Options

### Bash Script (`update_bax_to_latest_vscode.sh`)

| Option | Description |
|--------|-------------|
| `-i, --insider` | Update to VSCode Insider builds instead of stable |
| `-f, --force` | Force update even if already at latest version |
| `-s, --skip-icons` | Skip icon branding (faster for text-only updates) |
| `-v, --skip-vscodium` | Skip BAX patches update (VSCode only) |
| `-b, --build` | Automatically start build after update |
| `-h, --help` | Show help message |

### PowerShell Script (`update_bax_to_latest_vscode.ps1`)

| Parameter | Description |
|-----------|-------------|
| `-Insider` | Update to VSCode Insider builds instead of stable |
| `-Force` | Force update even if already at latest version |
| `-SkipIcons` | Skip icon branding (faster for text-only updates) |
| `-SkipBAX` | Skip BAX patches update (VSCode only) |
| `-Build` | Automatically start build after update |
| `-Help` | Show help message |

## Examples

```bash
# Basic update to latest stable
bash updating/update_bax_to_latest_vscode.sh

# Update to insider and build immediately
bash updating/update_bax_to_latest_vscode.sh --insider --build

# Force update and skip icon generation (faster)
bash updating/update_bax_to_latest_vscode.sh --force --skip-icons

# PowerShell equivalent
.\updating\update_bax_to_latest_vscode.ps1 -Insider -Build
```

## Requirements

### Common Requirements
- **Git** - For downloading VSCode source
- **curl** - For querying Microsoft's API (included in Windows 10+)
- **jq** - For JSON parsing (Linux/macOS only, PowerShell handles JSON natively)

### For Icon Branding
- **ImageMagick** - For generating icons from SVG files
  - Linux: `sudo apt install imagemagick` or `sudo dnf install ImageMagick`
  - macOS: `brew install imagemagick`
  - Windows: Download from [ImageMagick website](https://imagemagick.org/script/download.php#windows)

### Windows Additional Requirements
- **PowerShell 5.0+** (included in Windows 10+)
- **Git for Windows** (includes Git Bash for running shell scripts)

## What Happens During Update

### 1. Version Check
The script queries Microsoft's VSCode update API:
```
https://update.code.visualstudio.com/api/update/darwin/{quality}/0000000000000000000000000000000000000000
```

Where `{quality}` is either `stable` or `insider`.

### 2. Source Download
- Creates fresh `vscode/` directory
- Downloads specific commit from Microsoft's VSCode repository
- Uses shallow clone for faster download

### 3. Branding Application
- Runs `branding/apply_bax_branding.sh` for text branding
- Runs `branding/apply_bax_icons.sh` for icon branding (unless `--skip-icons`)
- Runs `prepare_vscode.sh` to apply patches
- Applies final critical branding to fix product.json

### 4. Cleanup
- Removes old build directories (`VSCode-*`, `vscode-reh-*`)
- Cleans `vscode/out` and `vscode/node_modules`
- Forces fresh npm install on next build

## Backup and Recovery

### Automatic Backups
Each update creates a backup in `updating/backups/backup_YYYYMMDD_HHMMSS/`:
- Current version information (`upstream/{quality}.json`)
- Backup location is displayed after update

### Manual Recovery
If something goes wrong:
1. Restore from backup: `cp updating/backups/backup_*/stable.json upstream/`
2. Re-run the update script with `--force`
3. Or manually checkout a specific VSCode version

## Troubleshooting

### Common Issues

**"Failed to fetch version information"**
- Check internet connection
- Verify Microsoft's API is accessible
- Try again later (API might be temporarily down)

**"Missing required tools"**
- Install missing dependencies (git, curl, jq, ImageMagick)
- On Windows, ensure Git for Windows is installed

**"VSCode preparation failed"**
- Check if patches apply cleanly
- Some VSCode changes might require patch updates
- Check the output for specific patch failures

**"Icon branding script had issues"**
- Ensure ImageMagick is installed and in PATH
- Check if BAX logo files exist in `branding/` directory
- Use `--skip-icons` to bypass icon generation

### Debug Mode
For more verbose output, you can:

**Bash:**
```bash
# Run with debug mode
bash -x updating/update_bax_to_latest_vscode.sh
```

**PowerShell:**
```powershell
# Run with verbose output
.\updating\update_bax_to_latest_vscode.ps1 -Verbose
```

## Integration with CI/CD

These scripts can be integrated into automated workflows:

```yaml
# GitHub Actions example
- name: Update to latest VSCode
  run: |
    bash updating/update_bax_to_latest_vscode.sh --force --build
    
- name: Commit updates
  run: |
    git config user.name "BAX Update Bot"
    git config user.email "update-bot@bax-ide.com"
    git add .
    git commit -m "Update to VSCode $(cat upstream/stable.json | jq -r '.tag')" || exit 0
    git push
```

## Manual Updates

If you prefer manual control:

1. **Check current version:**
   ```bash
   cat upstream/stable.json
   ```

2. **Get latest VSCode version:**
   ```bash
   curl -s "https://update.code.visualstudio.com/api/update/darwin/stable/0000000000000000000000000000000000000000" | jq '.version, .name'
   ```

3. **Update manually:**
   ```bash
   # Run individual steps
   bash get_repo.sh                    # Download VSCode source
   bash prepare_vscode.sh             # Apply patches
   bash branding/apply_bax_branding.sh # Apply branding
   bash branding/apply_bax_icons.sh   # Apply icons
   bash dev/build.sh                  # Build
   ```

## Contributing

If you find issues with the update scripts:

1. Check existing issues: https://github.com/Erg69/BAX-IDE/issues
2. Create a new issue with:
   - Your operating system and version
   - Script output/error messages
   - Steps to reproduce

## License

These scripts are part of the BAX-IDE project and are licensed under the MIT License.
